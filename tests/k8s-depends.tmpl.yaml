apiVersion: v1
kind: Namespace
metadata:
  name: ${X_K8S_NS}
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: ${X_K8S_NS}
  labels:
    app: minio
spec:
  selector:
    app: minio
  #clusterIP: None
  type: LoadBalancer
  loadBalancerIP: ${X_MINIO_IP}
  ports:
  - port: 9000
    name: http-api
  - port: 9001
    name: http-console
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
  name: minio
  namespace: ${X_K8S_NS}
spec:
  replicas: 1
  serviceName: minio
  selector:
    matchLabels:
      app: minio
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #storageClassName:
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      annotations:
      labels:
        app: minio
      name: minio
    spec:
      # serviceAccount:
      # serviceAccountName:
      # nodeSelector:
      #   kubernetes.io/os: linux
      # securityContext: {}
      containers:
      - name: minio
        image: bitnami/minio:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
          name: http-api
        - containerPort: 9001
          name: http-console
        volumeMounts:
        - name: data
          mountPath: /data
        env:
        - name: MINIO_ROOT_USER
          value: ${X_MINIO_USERNAME}
        - name: MINIO_ROOT_PASSWORD
          value: ${X_MINIO_PASSWORD}
        - name: MINIO_DEFAULT_BUCKETS
          value: '${X_MINIO_BUCKET}:none'
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: ${X_K8S_NS}
  labels:
    app: mongodb
spec:
  selector:
    app: mongodb
  #clusterIP: None
  type: LoadBalancer
  loadBalancerIP: ${X_MONGODB_IP}
  ports:
  - port: 27017
    name: tcp-mongodb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
  name: mongodb
  namespace: ${X_K8S_NS}
spec:
  replicas: 1
  serviceName: mongodb
  selector:
    matchLabels:
      app: mongodb
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #storageClassName:
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      annotations:
      labels:
        app: mongodb
      name: mongodb
    spec:
      # serviceAccount:
      # serviceAccountName:
      # nodeSelector:
      #   kubernetes.io/os: linux
      # securityContext: {}
      containers:
      - name: minio
        image: bitnami/mongodb:6.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
          name: tcp-mongodb
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
        env:
        - name: MONGODB_PORT_NUMBER
          value: "27017"
        - name: MONGODB_ROOT_USER
          value: root
        - name: MONGODB_ROOT_PASSWORD
          value: rootpw
        - name: MONGODB_USERNAME
          value: ${X_MONGODB_USERNAME}
        - name: MONGODB_PASSWORD
          value: ${X_MONGODB_PASSWORD}
        - name: MONGODB_DATABASE
          value: ${X_MONGODB_DATABASE}
